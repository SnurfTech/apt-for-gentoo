#!/usr/bin/python3
import sys
from os import system
from colorama import Fore

n = len(sys.argv)

def ht():
    print("usage: apt [--help] [-h?] ...")
    print("--help, -h, -?:      display help text")
    print("install:             install package")
    print("remove:              remove package")
    print("autoremove:          remove package, and if no additional arguments are given, autoremove will uninstall older versions of packages that already have newer versions installed")
    print("show:                show details and information about a package")
    print("update:              update repositories and ebuilds")
    print("upgrade:             upgrade package or everything")
    print("full-upgrade:        upgrade everything with no restrictions")
    print("search, list:        search for a package using keyword")
    print("satify:              update configuration files")
    print("unmask:              unmask a package (This option doesn't support arguments, and if your unsure on how to use it, then don't)")
def in1():
    print(f'{Fore.LIGHTRED_EX}Error:{Fore.RESET} not enough arguments')
    ht()
    sys.exit()
def in2():
    print(f'{Fore.LIGHTRED_EX}Error:{Fore.RESET} too many arguments.')
    ht()
    sys.exit()
try:
    if sys.argv[1] == "-?" or sys.argv[1] == "-h" or sys.argv[1] == "--help":
        ht()
        sys.exit()
    elif sys.argv[1] == "search" or sys.argv[1] == "list":
        if not n >= 3:
            in1()
        for i in range(2, n):
            system(f'sudo emerge --search {sys.argv[i]}')
    elif sys.argv[1] == "show":
        if not n >= 3:
            in1()
        for i in range(2, n):
            num = 2
            while num < n:
                system(f'sudo emerge --info {sys.argv[num]}')
                num = num + 1
            sys.exit()
    elif sys.argv[1] == "install":
        if not n >= 3:
            in1()
        for i in range(2, n):
            system(f'sudo emerge --verbose --ask -n {sys.argv[i]}')
    elif sys.argv[1] == "reinstall":
        if not n >= 3:
            in1()
        for i in range(2, n):
            system(f'sudo emerge --ask -Cv {sys.argv[i]}')
            system(f'sudo emerge --ask --verbose {sys.argv[i]}')
            sys.exit()
    elif sys.argv[1] == "remove" or sys.argv[1] == "autoremove":
        if not n >= 3 and sys.argv[1] == "autoremove":
            system(f'sudo emerge --ask --verbose --prune @installed')
        elif not n>= 3 and sys.argv[1] == "remove":
            in1()
        for i in range(2, n):
            system(f'sudo emerge --ask -Cv {sys.argv[i]}')
            sys.exit()
    elif sys.argv[1] == "update":
        if not n >= 3:
            system("sudo emerge --verbose --ask --sync -n")
            sys.exit()
        if n >= 2:
            in2()
    elif sys.argv[1] == "upgrade":
        if not n >= 3:
            system("sudo emerge --ask --verbose --changed-use -n --deep --update @installed")
            sys.exit()
        for i in range(2, n):
            system(f'sudo emerge --ask --verbose --changed-use -n --deep --update {sys.argv[i]}')
    elif sys.argv[1] == "full-upgrade":
        if not n >= 3:
            system(f'sudo emerge --ask --verbose --changed-use --deep --prune --update @installed')
            sys.exit()
        if n >= 2:
            in2()
    elif sys.argv[1] == "satify":
        if n >= 3:
            in2()
        system("sudo etc-update")
        sys.exit()
    elif sys.argv[1] == "unmask":
        if n >= 3:
            in2()
        system("sudo vim /etc/portage/package.accept_keywords")
    else:
        print(f'{Fore.LIGHTRED_EX}Error:{Fore.RESET} invalid argument')
        ht()
        sys.exit()
except IndexError:
    ht()
    sys.exit()
